[
    {
        "UpdateStageName": "Create Installation Directory",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}pgsql"
    },
    {
        "UpdateStageName": "Create Data Directory",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}data"
    },
    {
        "UpdateStageName": "Create Run Directory",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}run"
    },
    {
        "UpdateStageName": "Install PostgreSQL",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"ServerVersion=\\\"{{ServerVersion}}\\\"; CustomServerVersion=\\\"{{CustomServerVersion}}\\\"; cd postgresql && if command -v pgsql/bin/postgres >/dev/null 2>&1; then InstalledVersion=$(pgsql/bin/postgres -V | sed \\\"s/.*(PostgreSQL) \\([0-9][0-9]*\\.[0-9][0-9]*\\).*/\\1/\\\"); else InstalledVersion=\\\"\\\"; fi; mkdir -p build >/dev/null; cd build && rm -rf ./* >/dev/null 2>&1 && if [[ -z \\\"$ServerVersion\\\" ]]; then if [[ ! \\\"$CustomServerVersion\\\" =~ ^(13|14|15|16|17)\\.[0-9]+$ ]]; then echo \\\"Invalid PostgreSQL version format specified\\\" && exit 1; elif [ \\\"$InstalledVersion\\\" = \\\"$CustomServerVersion\\\" ]; then echo \\\"PostgreSQL v$CustomServerVersion already installed. Skipping\\\" && exit 0; else DownloadURL=https://ftp.postgresql.org/pub/source/v$CustomServerVersion/postgresql-$CustomServerVersion.tar.gz && OutputMessage=\\\"PostgreSQL v$CustomServerVersion source code downloaded\\\"; fi; else LatestMinor=$(wget -qO- https://www.postgresql.org/versions.json | jq -r \\\".[] | select(.major == \\\\\\\"$ServerVersion\\\\\\\") | .latestMinor\\\") && LatestVersion=\\\"${ServerVersion}.${LatestMinor}\\\" && if [ \\\"$InstalledVersion\\\" = \\\"$LatestVersion\\\" ]; then echo \\\"PostgreSQL v$LatestVersion already installed. Skipping\\\" && exit 0; else DownloadURL=https://ftp.postgresql.org/pub/source/v$LatestVersion/postgresql-$LatestVersion.tar.gz && OutputMessage=\\\"PostgreSQL v$LatestVersion source code downloaded\\\"; fi; fi; [[ -f postgresql.tar.gz ]] && rm -rf postgresql.tar.gz; wget -qO postgresql.tar.gz $DownloadURL || { echo \\\"Download failed from the PostgreSQL CDN. This is a fault with the CDN, not AMP. Aborting\\\"; exit 1; }; tar -xzf postgresql.tar.gz --strip-components=1 >/dev/null 2>&1 && rm -rf postgresql.tar.gz >/dev/null 2>&1 && echo \\\"$OutputMessage\\\" && echo \\\"Building PostgreSQL from source. This will take a while\\\" && ./configure --prefix=\\\"{{$FullBaseDir}}pgsql\\\" >/dev/null && make -j$(nproc) >/dev/null && make install >/dev/null && cd .. && rm -rf build >/dev/null 2>&1 && echo \\\"Done\\\"\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Initialize PostgreSQL",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd postgresql && { [[ -f \\\"{{$FullBaseDir}}data/PG_VERSION\\\" ]] || { pgsql/bin/initdb --pgdata=\\\"{{$FullBaseDir}}data\\\" --auth=md5 --username=amp --pwfile=<(echo \\\"{{AMPPassword}}\\\"); echo -e \\\"\\nDefault database cluster created, including postgres database\\nDo not delete the postgres database!\\nSuper-user amp created with secure password authentication\\nUse AMP's console to manage the server via the amp user\\n\\\"; }; } && { conf=\\\"{{$FullBaseDir}}data/pg_hba.conf\\\"; grep -Eq \\\"^local\\s+all\\s+amp\\s+peer\\\" \\\"$conf\\\" || echo \\\"local   all             amp                                     peer\\\" >> \\\"$conf\\\"; grep -Eq \\\"^local\\s+all\\s+all\\s+md5\\\" \\\"$conf\\\" || echo \\\"local   all             all                                     md5\\\" >> \\\"$conf\\\"; grep -Eq \\\"^host\\s+all\\s+all\\s+0\\.0\\.0\\.0/0\\s+md5\\\" \\\"$conf\\\" || echo \\\"host    all             all             0.0.0.0/0               md5\\\" >> \\\"$conf\\\"; }\"",
        "SkipOnFailure": false
    }
]