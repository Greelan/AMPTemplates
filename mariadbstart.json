[
    {
        "UpdateStageName": "Run MariaDB Server",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd mariadb/mariadb && bin/mariadb-admin --socket=../run/mariadbd/mariadbd.sock ping >/dev/null 2>&1 && exit 0 || bin/mariadbd --defaults-file=../my.cnf --port={{$ServerPort}} --basedir=./ --datadir=../data --pid-file=../run/mariadbd/mariadbd.pid --socket=../run/mariadbd/mariadbd.sock --bind-address=0.0.0.0 --general-log-file=../log/mariadb/mariadb.log --wait-timeout=28800 &\"",
        "RunInBackground": true,
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Run MariaDB Server",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"Set-Location -Path 'mariadb/mariadb'; & bin/mariadb-admin.exe --protocol=pipe --socket={{WindowsSocketName}} --user=root --password={{RootPassword}} ping *> $null 2>&1; if ($LASTEXITCODE -eq 0) { exit 0 } else { & bin/mariadbd.exe --defaults-file=../my.cnf --port={{$ServerPort}} --basedir=./ --datadir=../data --socket={{WindowsSocketName}} --bind-address=0.0.0.0 --general-log-file=../log/mariadb/mariadb.log --wait-timeout=28800 --named-pipe --console }\"",
        "RunInBackground": true,
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Upgrade MariaDB",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd mariadb/mariadb && timeout=60; while ((timeout--)); do bin/mariadb-admin --socket=../run/mariadbd/mariadbd.sock ping >/dev/null 2>&1 && break || sleep 1; done; ((timeout<0)) && { echo \\\"MariaDB server failed to start. Aborting\\\"; exit 1; }; bin/mariadb --socket=../run/mariadbd/mariadbd.sock --user=amp -e \\\"FLUSH PRIVILEGES; ALTER USER 'root'@'localhost' IDENTIFIED VIA unix_socket; ALTER USER 'amp'@'localhost' IDENTIFIED VIA unix_socket; ALTER USER 'mariadb.sys'@'localhost' ACCOUNT LOCK; FLUSH PRIVILEGES\\\"; bin/mariadb-upgrade --port={{$ServerPort}} --socket=../run/mariadbd/mariadbd.sock --user=amp\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Set Up and Upgrade MariaDB",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"Set-Location -Path 'mariadb/mariadb'; for ($i=0; $i -lt 60; $i++) { & bin/mariadb-admin.exe --protocol=pipe --socket={{WindowsSocketName}} --user=root --password={{RootPassword}} ping *> $null 2>&1; if ($LASTEXITCODE -eq 0) { & bin/mariadb-admin.exe --protocol=pipe --socket={{WindowsSocketName}} --user=root ping *> $null 2>&1; if ($LASTEXITCODE -eq 0) { $hosts = & bin/mariadb.exe --protocol=pipe --socket={{WindowsSocketName}} --user=root --password={{RootPassword}} --batch --skip-column-names -e \\\"SELECT Host FROM mysql.user WHERE User = 'root';\\\"; foreach ($host in $hosts) { & bin/mariadb.exe --protocol=pipe --socket={{WindowsSocketName}} --user=root -e \\\"ALTER USER 'root'@'${host}' IDENTIFIED BY '{{RootPassword}}';\\\" }; & bin/mariadb.exe --protocol=pipe --socket={{WindowsSocketName}} --user=root --password={{RootPassword}} -e \\\"FLUSH PRIVILEGES; SELECT User, Host, plugin, authentication_string FROM mysql.user WHERE User = 'root';\\\"; break } }; Start-Sleep -Seconds 1 }; if ($i -eq 60) { Write-Output \\\"MariaDB server failed to start. Aborting\\\"; exit 1 } else { & bin/mariadb-upgrade.exe --port={{$ServerPort}} --protocol=tcp --host=127.0.0.1 --user=root --password={{RootPassword}} }\"",
        "SkipOnFailure": false
    }
]